
<div id="map_container">
	<div id="map"></div>
	<div id="form">
		
	</div>
</div>


<!-- scripts for the map -->
<script type="text/javascript" src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.14.3/mapbox-gl.js'></script>
<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v1.0.0/mapbox-gl-geocoder.js'></script>
<script type="text/javascript">

		mapboxgl.accessToken = 'pk.eyJ1IjoiYXMxNzMxNzEiLCJhIjoiY2lsNDR6bWdwM3cxb3Z5bTNvbmtmeTJsbiJ9.16HxpvRVaoKgLOBG9L-Quw';

		// generates a new map
		var map = new mapboxgl.Map({
	    	// container id
	    	container: 'map',
	    	//hosted style id
	    	style: 'mapbox://styles/as173171/cimctg4mr00dm9lm1466xegi0',
	    	// starting position
	   		center: [-73.977800, 40.715824],
	   		// starting zoom
	   		zoom: 13,
		});


		map.on('style.load', function(){
			// loads in the mapbox tile/geojson dataset for use in layers
			map.addSource('boroughs', {
				'type': 'vector',
				'url': 'mapbox://as173171.8smtgeas'
			});

			map.addSource('single-point', {
				"type": "geojson",
				"data": {
					"type": "FeatureCollection",
					"features": []
				}
			});

			// adds a layer to the map that is triggered on hover, it changes the color a little bit to signify that selection
			map.addLayer({
				"id": "route-hover",
				"type": "fill",
				"source": "boroughs",
				"source-layer":"boroughs",
				"layout": {},
				"paint": {
					"fill-color": "#2B3E42",
					"fill-opacity": 0.8,
					"fill-outline-color": "#26244d"
				},
				"filter": ["==", "BoroCode", ""]
			});

			map.addLayer({
				"id": "point",
				"source": "single-point",
				"type": "circle",
				"paint": {
					"circle-radius": 10,
					"circle-color": "#26244d"
				}
			});

			// this function looks to see which borough you clicked on and assigns the BoroId property from the geojson file to a variable and to a value of #map
			map.on('click', function(e) {
				map.featuresAt(e.point, {
					radius: 1,
					includeGeometry: true,
					layer: ['boroughs'],
				}, function (err, features) {
					if (err || !features.length) {
						return;
					}
					var feature = features[0];
					var id = feature.properties.BoroId;
					document.getElementById("map").value = id;
					console.log(document.getElementById("map").value);
					map.panTo(map.unproject(e.point));
				});
			});



			// disable zooming on scroll, makes it easier to navigate around the page without accidentally zooming way out or way in
			map.scrollZoom.disable();
			// disables zooming on a double click
			map.doubleClickZoom.disable();

			// defines a variable and generates a popup
			var popup = new mapboxgl.Popup();

			// Adds geocoder
			var geocoder = new mapboxgl.Geocoder();

			map.addControl(geocoder);

			geocoder.on('result', function(ev) {
				map.getSource('single-point').setData(ev.result.geometry);
				var thing = ev.result.geometry.coordinates;
				console.log(thing);
				// map.panTo(ev.result.geometry.coordinates);
				var result = ev.result;
				var name = ev.result.text;
				console.log(name);

				pippop(result)
			});

			function pippop(x){
				map.on('click', function(){
					console.log(x);
					popup.setLngLat(x.geometry.coordinates)
						.setHTML(x.place_name)
						.addTo(map);
				});
			};
		});
	</script>